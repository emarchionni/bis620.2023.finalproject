---
title: "DS$^3$ 2022-09-01"
format: html
---

# What are we going to do?

## Reading and summarizing the Social Vulnerability Index

-   Importing the data and the data dictionary
-   Summarize the data using `dplyr`, `purrr`, DT`,`gtsummary`, and`naniar\`.

# [The CDC Social Vulnerability Index](https://www.atsdr.cdc.gov/placeandhealth/svi/index.html)

## What is it?

-   Social vulnerability ["refers to the potential negative effects on communities caused by external stresses on human health. Such stresses include natural or human-caused disasters, or disease outbreaks. Reducing social vulnerability can decrease both human suffering and economic loss."](https://www.atsdr.cdc.gov/placeandhealth/svi/index.html)
-   Data derived from ["15 U.S. census variables to help local officials identify communities that may need support before, during, or after disasters."](https://www.atsdr.cdc.gov/placeandhealth/svi/index.html)

## Where do I get it?

-   https://www.atsdr.cdc.gov/placeandhealth/svi/data_documentation_download.html

## Which files are included?

-   A `2018-data` directory.
-   `SVI_2018.zip`
-   `data-dictionary-2018.csv` - the data dictionary.
-   `SVI2018Documentation_01192022_1.pdf` - written documentation.

# Importing the data and the data dictionary

```{r}
library(readr)
library(DT)
library(dplyr)
library(sf)

dd <- read_csv(file.path("2018-data", "data-dictionary-2018.csv"))

dd[, c("var_name", "description")]

class(dd) #it tells the type of dd, the basic R-type is data.frame, tbl defines the type of functions and operations that we can do on a type data.frame (as it was a "template")

dd_df <- as.data.frame(dd)
class(dd_df) # this is just a data.frame, there is no extra table structure

class(dd_df[,'var_name']) #it gives back a character type and not a data.frame anymore
class(dd[,'var_name']) #it gives back a data.frame of the table type, tables always return tables!!!

select(dd, var_name, description)

# %>% or |>
dd |> select(var_name, description) #read it from top to bottom left to right, we can add more things (no math operations because we may miss the right ordering of operations)

dds = select(dd, var_name, description)
datatable(dds)

# %>%

dd |> 
  select(var_name, description) |>
  datatable()
```

```{r}
library(sf)
d <- read_sf(file.path("2018-data", "SVI2018_US_tract.shp"))
d
# a table is a data.frame and a data.frame is a list
```



# Cleaning

```{r}
library(purrr)
# Turn the -999's into NA's

# Using the column index.
db <- d

dbl_cols = which(map_lgl(db, is.double)) #check which columns are numeric

# or

for (dc in dbl_cols) {
  db[[dc]][ db[[dc]] == -999 ] <- NA
}
db

# Using the column names.
db <- d

dbl_col_names = names(which(map_lgl(db, is.double)))

for (dcn in dbl_col_names) {
  db[ db[[dcn]] == -999 ,dcn] <- NA
}

# or

mnnn_to_na <- function(x) {
  x[x == -999] <- NA
  x
}

d <- d %>% 
  mutate_if(is.double, mnnn_to_na)
```

# Exploratory Visualizations

```{r}
library(naniar)
library(DT)
#datatable(miss_var_summary(d)) # Is this a better summary than DT?
d %>%
  miss_var_summary() %>%
  mutate(`Percent Missing` = round(10 * pct_miss, 2)) %>%
  rename(`Number Missing` = n_miss, Variable = variable) %>%
  select(-pct_miss) %>%
  datatable()
```

```{r}
gg_miss_upset(d)
```

# Table summaries

## The data dictionary

```{r}
datatable(dd)
```

## The data

```{r}
library(gtsummary)
tbl_summary(dd)
```

## Which counties in Connecticut have the biggest difference in census tract GDPs?

```{r}
d |>
  filter(STATE == "CONNECTICUT") |>
  print()
```
