getwd()
library(usethis)
library(devtools)
remove(list=ls())
setwd("C:\\Users\\edoar\\Desktop\\BIS620 Data Science Software Systems\\project")
library(readr)
data <- read.csv("SVI_2020_US_county.csv", sep = ',', header = T, row.names = NULL)
data <- tibble(data)
lbrary(tibble)
library(tibble)
data <- read.csv("SVI_2020_US_county.csv", sep = ',', header = T, row.names = NULL)
mnnn_to_na <- function(x) {
x[x == -999] <- NA
return(x)
}
data <- data |>
mutate_if(is.double, mnnn_to_na)
??mutate_if
library(dplyr)
data <- data |>
mutate_if(is.double, mnnn_to_na)
data <- read.csv("SVI_2020_US_county.csv", sep = ',', header = T, row.names = NULL)
data <- tibble(data)
SVI_2020_US_county <- data
usethis::use_data(SVI_2020_US_county)
mnnn_to_na <- function(x) {
x[x == -999] <- NA
return(x)
}
data <- data |>
mutate_if(is.double, mnnn_to_na)
data <- data |>
mutate(EP_WHITE = 100 - (EP_AFAM + EP_HISP + EP_ASIAN + EP_NHPI + EP_OTHERRACE))
flag_creator <- function(row){
# browser()
race <- row |>
which.max()
if(race == 1)
return("AF")
else if(race == 2)
return("H")
else if(race == 3)
return("A")
else if(race == 4)
return("N")
else if(race == 5)
return("O")
else
return("W")
}
flag <- data |>
select(EP_AFAM, EP_HISP, EP_ASIAN, EP_NHPI, EP_OTHERRACE, EP_WHITE) |>
apply(1, flag_creator)
data <- data |>
mutate(F_RACE = flag)
SVI_2020_US_county <- data
usethis::use_data(SVI_2020_US_county)
usethis::use_data(SVI_2020_US_county, overwrite = T)
use_vignette("analysis")
data |>
select(F_RACE) |>
table()
??opts_chun
check()
View(SVI_2020_US_county)
check(cran = FALSE, env_vars = c("_R_CHECK_PACKAGE_DATASETS_SUPPRESS_NOTES_" = "false"))
check(cran = FALSE, env_vars = c("_R_CHECK_PACKAGE_DATASETS_SUPPRESS_NOTES_" = "false"))
check(cran = FALSE, env_vars = c("_R_CHECK_PACKAGE_DATASETS_SUPPRESS_NOTES_" = "false"))
document()
document()
use_gpl_license()
document()
# library(BIS620FinalProject)
data |>
select(F_RACE) |>
table()
dim(SVI_2020_US_county)
source("C:/Users/edoar/Desktop/BIS620 Data Science Software Systems/project/BIS620FinalProject/R/boxplot.R")
# disregard Asian and Native
data <- data |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE()
library(ggplot2)
# disregard Asian and Native
data <- data |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE()
source("C:/Users/edoar/Desktop/BIS620 Data Science Software Systems/project/BIS620FinalProject/R/boxplot.R")
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE(SVI_2020_US_county)
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE(SVI_2020_US_county_filt)
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE(SVI_2020_US_county_filt) +
aes(xlab = '', ylab = 'Percentage')
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE(SVI_2020_US_county_filt) +
xlab() +
ylab('Percentage') +
labs(title = 'Housing cost burden percentage')
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE(SVI_2020_US_county_filt) +
xlab('') +
ylab('Percentage') +
labs(title = 'Housing cost burden percentage')
source("C:/Users/edoar/Desktop/BIS620 Data Science Software Systems/project/BIS620FinalProject/R/boxplot.R")
boxplot.F_RACE(SVI_2020_US_county_filt) +
xlab('Most represented county') +
ylab('Percentage') +
labs(title = 'High housing cost burden percentage') +
scale_fill_brewer(palette="Blues")
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE(SVI_2020_US_county_filt) +
xlab('Most represented county') +
ylab('Percentage') +
labs(title = 'High housing cost burden percentage') +
scale_fill_brewer(palette="Blues")
source("C:/Users/edoar/Desktop/BIS620 Data Science Software Systems/project/BIS620FinalProject/R/boxplot.R")
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot.F_RACE(SVI_2020_US_county_filt) +
xlab('Most represented county') +
ylab('Percentage') +
labs(title = 'High housing cost burden percentage') +
scale_fill_brewer(palette="Blues")
boxplot.F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
xlab('Most represented county') +
ylab('Percentage') +
labs(title = 'High housing cost burden percentage')
boxplot.F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
xlab('Most represented county') +
ylab('Percentage') +
labs(title = 'High housing cost burden percentage')
boxplot.F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer() +
theme_minimal() +
xlab('Most represented county') +
ylab('Percentage') +
labs(title = 'High housing cost burden percentage')
boxplot.F_RACE(SVI_2020_US_county_filt) +
labs(title = 'High housing cost burden percentage', x = 'Most represented county', y = 'Percentage')
source("C:/Users/edoar/Desktop/BIS620 Data Science Software Systems/project/BIS620FinalProject/R/boxplot.R")
boxplot.F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
labs(title = 'High housing cost burden percentage', x = 'Most represented county', y = 'Percentage')
boxplot.F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
labs(title = 'High housing cost burden percentage', x = 'Most represented county', y = 'Percentage')
boxplot.F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage', x = 'Most represented county', y = 'Percentage')
check()
document()
check()
?select
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
source("C:/Users/edoar/Desktop/BIS620 Data Science Software Systems/project/BIS620FinalProject/R/boxplot.R")
document()
check()
?data
source("C:/Users/edoar/Desktop/BIS620 Data Science Software Systems/project/BIS620FinalProject/R/boxplot.R")
document()
rm(list = c("boxplot_F_RACE"))
document()
check()
document()
check()
?data
document()
document()
check()
document()
View(SVI_2020_US_county)
data("SVI_2020_US_county)
data("SVI_2020_US_county)
data("SVI_2020_US_county")
remove(list = ls())
data("SVI_2020_US_county")
#library(BIS620FinalProject)
library(dplyr)
#data("SVI_2020_US_county")
SVI_2020_US_county |>
select(F_RACE) |>
table()
SVI_2020_US_county$F_RACE
class(data("SVI_2020_US_county"))
class(SVI_2020_US_county)
document()
check()
install()
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = F_RACE, color = EP_HBURD, fill = F_RACE)) +
geom_histogram() +
theme_classic()
}
library(BIS620FinalProject)
histogram_F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage')
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
histogram_F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage')
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = EP_HBURD, color = F_RACE)) +
geom_histogram() +
theme_classic()
}
histogram_F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage')
histogram_F_RACE(SVI_2020_US_county_filt) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage')
ggplot(data, aes(color = F_RACE, y = EP_HBURD, fill = F_RACE)) +
geom_boxplot() +
theme_classic()
boxplot_F_RACE <- function(data) {
ggplot(data, aes(color = F_RACE, y = EP_HBURD, fill = F_RACE)) +
geom_boxplot() +
theme_classic()
}
ggplot(data, aes(x = F_RACE, y = EP_HBURD, fill = F_RACE)) +
geom_boxplot() +
theme_classic()
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = EP_HBURD, color = F_RACE, fill = F_RACE)) +
geom_histogram() +
theme_classic()
}
histogram_F_RACE(SVI_2020_US_county_filt) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage')
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = EP_HBURD, color = F_RACE, fill = F_RACE)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
theme_classic()
}
histogram_F_RACE(SVI_2020_US_county_filt) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage') +
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = EP_HBURD, color = F_RACE, fill = F_RACE)) +
geom_histogram() +
theme_classic()
}
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = EP_HBURD, color = F_RACE, fill = F_RACE)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
theme_classic()
}
histogram_F_RACE(SVI_2020_US_county_filt) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage')
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = EP_HBURD, color = F_RACE, fill = F_RACE)) +
geom_histogram() +
theme_classic()
}
histogram_F_RACE(SVI_2020_US_county_filt) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage')
library(ggplot2)
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot_F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage', x = 'Most represented county', y = 'Percentage')
boxplot_F_RACE <- function(data) {
ggplot(data, aes(x = F_RACE, y = EP_HBURD, fill = F_RACE)) +
geom_boxplot() +
theme_classic()
}
library(ggplot2)
# disregard Asian and Native
SVI_2020_US_county_filt <- SVI_2020_US_county |>
filter(F_RACE != "A" & F_RACE != "N")
boxplot_F_RACE(SVI_2020_US_county_filt) +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage', x = 'Most represented county', y = 'Percentage')
```{r}
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "AF")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "AF")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'AFRICAN AMERICAN - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "H")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'HISPANIC - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "W")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'WHITE - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
ggplot(SVI_2020_US_county_filt|>select(F_RACE), aes(x = EP_HBURD))
ggplot(SVI_2020_US_county_filt|>select(F_RACE, EP_HBURD), aes(x = EP_HBURD))
histogram_F_RACE <- function(data) {
ggplot(data, aes(x = EP_HBURD)) +
geom_histogram() +
theme_minimal()
}
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "AF")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'AFRICAN AMERICAN - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "H")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'HISPANIC - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "W")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'WHITE - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "AF")) +
theme_minimal() +
geom_histogram(color="darkblue") +
theme(legend.position="none") +
labs(title = 'AFRICAN AMERICAN - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "AF")) +
theme_minimal() +
geom_histogram(color="lightblue", fill = "lightblue") +
theme(legend.position="none") +
labs(title = 'AFRICAN AMERICAN - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "H")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'HISPANIC - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "W")) +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'WHITE - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "AF")) +
theme_minimal() +
geom_histogram(color="lightblue", fill = "lightblue") +
theme(legend.position="none") +
labs(title = 'AFRICAN AMERICAN - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "H")) +
theme_minimal() +
geom_histogram(color="lightblue", fill = "lightblue") +
theme(legend.position="none") +
labs(title = 'HISPANIC - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
histogram_F_RACE(SVI_2020_US_county_filt |> filter(F_RACE == "W")) +
theme_minimal() +
geom_histogram(color="lightblue", fill = "lightblue") +
theme(legend.position="none") +
labs(title = 'WHITE - High housing cost burden percentage', x = 'Percentage', y = 'Counts')
document()
rm(list = c("boxplot_F_RACE"))
document()
rm(list = c("histogram_F_RACE"))
document()
check()
install()
View(SVI_2020_US_county_filt)
?nrow
?pull
?aov
?summary
?numeric
?sample
?list
document()
lbrary
library(devtools)
library(usethis)
document()
check()
library(devtools)
document()
check()
install()
library(BIS620FinalProject)
vignette()
vignette("BIS620FinalProject")
browseVignettes("BIS620FinalProject")
vignette(analysis)
vignette(analysis, package = "BIS620FinalProject")
install(build_vignettes = T)
browseVignettes()
browseVignettes("BIS620FinalProject")
